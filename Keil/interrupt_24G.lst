C51 COMPILER V9.00   INTERRUPT_24G                                                         09/07/2017 13:21:09 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE INTERRUPT_24G
OBJECT MODULE PLACED IN .\interrupt_24G.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ..\source\interrupt_24G.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INTVECTOR(0
                    -X0300) INCDIR(..\include;..\BLE Service) DEBUG OBJECTEXTEND PRINT(.\interrupt_24G.lst) TABS(2) OBJECT(.\interrupt_24G.ob
                    -j)

line level    source

   1           /*****************************************************************************
   2          **               AMICCOM Electronics Corporation Document                   **
   3          **          Copyright (c) 2011-2015 AMICCOM Electronics Corporation         **
   4          **                                                                          **
   5          **      A3,1F,No.1, Li-Hsin 1th Road, Science_Based Industrid Park,         **
   6          **                       Hsin_Chu City, 300, Taiwan, ROC.                   **
   7          **                 Tel: 886-3-5785818   Fax: 886-3-5785819                  **
   8          **         E-mail:info@amiccom.com.tw  http: //www.amiccom.com.tw           **
   9          *****************************************************************************/
  10          #include "define.h"
  11          #include "A8107.h"
  12          #include "LibFunction.h"
  13          #include "Proprietary.h"
  14          
  15          
  16          extern uint8_t     xdata   Auto24G_Mode;
  17          extern uint8_t     xdata   Timer1Flag;
  18          extern uint16_t    xdata   Timer1Cnt;
  19          
  20          extern void DisableTimer1(void);
  21          
  22          /*********************************************************************
  23          ** INT1_ISR
  24          *********************************************************************/
  25          void INT1_ISR(void) interrupt 2
  26          {
  27   1          // User can add code
  28   1          _nop_();
  29   1      }
  30          
  31          /*********************************************************************
  32          ** Timer1_ISR
  33          *********************************************************************/
  34          void Timer1_ISR(void) interrupt 3
  35          {
  36   1          // User can add code
  37   1          if (Auto24G_Mode)
  38   1          {
  39   2              if (g_RxCnt)
  40   2                  g_RxCnt--;
  41   2              else
  42   2                  DisableRxWinS();
  43   2          }
  44   1          else
  45   1          {
  46   2              if(Timer1Cnt)
  47   2                  Timer1Cnt --;
  48   2              else
  49   2                  DisableTimer1();
  50   2          }
  51   1      }
  52          
  53          /*********************************************************************
C51 COMPILER V9.00   INTERRUPT_24G                                                         09/07/2017 13:21:09 PAGE 2   

  54          ** Uart0Isr
  55          *********************************************************************/
  56          void Uart0Isr(void) interrupt 4
  57          {
  58   1          // User can add code
  59   1          _nop_();
  60   1      }
  61          
  62          /*********************************************************************
  63          ** Timer2_ISR
  64          *********************************************************************/
  65          void Timer2_ISR(void) interrupt 5
  66          {
  67   1          // User can add code
  68   1          _nop_();
  69   1      }
  70          
  71          /*********************************************************************
  72          ** INT2_ISR
  73          *********************************************************************/
  74          void INT2_ISR(void) interrupt 7
  75          {
  76   1          // User can add code
  77   1          _nop_();
  78   1      }
  79          
  80          /*********************************************************************
  81          ** INT3_ISR
  82          *********************************************************************/
  83          void SleepTimer1_ISR(void) interrupt 8
  84          {
  85   1          // User can add code
  86   1          _nop_();
  87   1      }
  88          
  89          /*********************************************************************
  90          ** INT4_ISR
  91          *********************************************************************/
  92          void RTC_ISR(void) interrupt 9
  93          {
  94   1          // User can add code
  95   1          _nop_();
  96   1      }
  97          
  98          /*********************************************************************
  99          ** RFISR
 100          *********************************************************************/
 101          void RFISR(void) interrupt 10
 102          {
 103   1          PCON |= 0x01;
 104   1          EIF = 0x08;
 105   1      
 106   1          if((XBYTE[TMR0CTL_REG]&0x20) == 0x20)
 107   1          {        
 108   2              BLE_SLAVE_PROCESS();
 109   2          }
 110   1          
 111   1          /* -------- RF_Timer500ms -------- */
 112   1          if(XBYTE[VCOC_REG]&0x80)
 113   1          {
 114   2              XBYTE[VCOC_REG] = rf_config_w[VCOC_REG-0x2000]|0x80;
 115   2              Timer500ms_flag = 1;
C51 COMPILER V9.00   INTERRUPT_24G                                                         09/07/2017 13:21:09 PAGE 3   

 116   2          }
 117   1          /* ------------------------------- */
 118   1      }
 119          
 120          /*********************************************************************
 121          ** INT4_ISR
 122          *********************************************************************/
 123          void KeyINT_ISR(void) interrupt 11
 124          {
 125   1          // User can add code
 126   1          _nop_();
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    233    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
